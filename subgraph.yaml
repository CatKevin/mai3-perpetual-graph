specVersion: 0.0.2
description: mai-v3-graph
repository: https://github.com/mcdexio/mai-v3-graph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Factory
    network: mainnet
    source:
      address: '0x2A1a5D765Ec33F35659764708e3C18D9546F5540'
      abi: Factory
      startBlock: 921539
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Factory
        - Token
        - LiquidityPool
      abis:
        - name: Factory
          file: ./abis/Factory.json
        - name: Oracle
          file: ./abis/Oracle.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: CreateLiquidityPool(address,address,address,address,address,bool)
          handler: handleCreateLiquidityPool
      blockHandlers:
        - handler: handleSyncPerpData
      file: ./src/factory.ts

  - kind: ethereum/contract
    name: SymbolService
    network: mainnet
    source:
      address: '0x74442EaE34A619D45fD7a608513D2C8d38bc55BB'
      abi: SymbolService
      startBlock: 921539
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Perpetual
      abis:
        - name: SymbolService
          file: ./abis/SymbolService.json
      eventHandlers:
        - event: AllocateSymbol(address,uint256,uint256)
          handler: handleAllocateSymbol
      file: ./src/symbolService.ts
  - kind: ethereum/contract
    name: Broker
    network: mainnet
    source:
      address: '0x2d172d0DeDa85d6B1A0C6cfEF081fB4Fb509cb7a' #broker contract address
      abi: Broker
      startBlock: 901987
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - MatchOrder
      abis:
        - name: Broker
          file: ./abis/Broker.json
      eventHandlers:
        - event: TradeSuccess(bytes32,(address,address,address,address,address,int256,int256,bytes32,uint256),int256,uint256)
          handler: handleTradeSuccess
      file: ./src/broker.ts
templates:
  - kind: ethereum/contract
    name: LiquidityPool
    network: mainnet
    source:
      abi: LiquidityPool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - User
        - Token
        - Transaction
        - Perpetual
        - MarginAccount
        - LiquidityPosition
        - Trade
        - Position
        - ClosedPosition
        - PerpHourData
      abis:
        - name: LiquidityPool
          file: ./abis/LiquidityPool.json
        - name: Oracle
          file: ./abis/Oracle.json
      eventHandlers:
        - event: CreatePerpetual(uint256,address,address,address,address,address,int256[8],int256[5])
          handler: handleCreatePerpetual
        - event: Finalize()
          handler: handleFinalize
        - event: EnterNormalState(uint256)
          handler: handleEnterNormalState
        - event: EnterEmergencyState(uint256,int256,uint256)
          handler: handleEnterEmergencyState
        - event: EnterClearedState(uint256)
          handler: handleEnterClearedState
        - event: Deposit(uint256,address,int256)
          handler: handleDeposit
        - event: Withdraw(uint256,address,int256)
          handler: handleWithdraw
        - event: AddLiquidity(address,int256,int256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,int256,int256)
          handler: handleRemoveLiquidity
        - event: Trade(uint256,indexed address,int256,int256,int256)
          handler: handleTrade
        - event: Liquidate(uint256,indexed address,indexed address,int256,int256)
          handler: handleLiquidate
      file: ./src/liquidityPool.ts
  - kind: ethereum/contract
    name: ShareToken
    network: mainnet
    source:
      abi: ShareToken
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - LiquidityPosition
      abis:
        - name: ShareToken
          file: ./abis/ShareToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: DelegateChanged(indexed address,indexed address,indexed address)
          handler: handleDelegate
      file: ./src/shareToken.ts
  - kind: ethereum/contract
    name: Vote
    network: mainnet
    source:
      abi: Vote
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - LiquidityPosition
      abis:
        - name: Vote
          file: ./abis/Governor.json
      eventHandlers:
        - event: ProposalCreated(uint256,address,address,string,bytes[],uint256,uint256,string)
          handler: handleProposalCreated
        - event: ProposalExecuted(uint256)
          handler: handleProposalExecuted
        - event: VoteCast(address,uint256,bool,uint256)
          handler: handleVoteCast
      file: ./src/vote.ts
