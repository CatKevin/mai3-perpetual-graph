specVersion: 0.0.2
description: mai-v3-graph
repository: https://github.com/mcdexio/mai-v3-graph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Factory
    network: mainnet
    source:
      address: '0x4ea47ffe24a8e2435e6a72ab451276224ca6cebb'
      abi: Factory
      startBlock: 637595
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Factory
        - Token
        - Perpetual
      abis:
        - name: Factory
          file: ./abis/factory.json
        - name: Oracle
          file: ./abis/Oracle.json
      eventHandlers:
        - event: CreatePerpetual(indexed address,indexed address,address,uint256)
          handler: handleNewPerpetual
      blockHandlers:
        - handler: handleSyncPerpData
      file: ./src/factory.ts
  - kind: ethereum/contract
    name: Broker
    network: mainnet
    source:
      address: '0x4ea47ffe24a8e2435e6a72ab451276224ca6cebb' #broker contract address
      abi: Broker
      startBlock: 637595
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - MatchOrder
      abis:
        - name: Broker
          file: ./abis/broker.json
      eventHandlers:
        - event: TradeSuccess((address,address,address,address,int256,int256,uint64,uint32,uint8,bool,uint64,uint256),int256,uint256)
          handler: handleTradeSuccess
      file: ./src/broker.ts
templates:
  - kind: ethereum/contract
    name: Perpetual
    network: mainnet
    source:
      abi: Perpetual
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - User
        - Token
        - Transaction
        - Perpetual
        - DepositCollateral
        - LiquidityPosition
        - Trade
        - Position
        - ClosedPosition
        - PerpHourData
      abis:
        - name: Perpetual
          file: ./abis/Perpetual.json
        - name: AMM
          file: ./abis/AMM.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Deposit(address,int256)
          handler: handleDeposit
        - event: Withdraw(address,int256)
          handler: handleWithdraw
        - event: AddLiquidatity(address,int256)
          handler: handleAddLiquidatity
        - event: RemoveLiquidatity(address,int256)
          handler: handleRemoveLiquidatity
        - event: TradePosition(address,int256,int256,uint256)
          handler: handleTradePosition
        - event: OpenPositionByTrade(address,int256,int256)
          handler: handleOpenPositionByTrade
        - event: ClosePositionByTrade(address,int256,int256,int256)
          handler: handleClosePositionByTrade
        - event: OpenPositionByLiquidation(address,int256,int256)
          handler: handleOpenPositionByLiquidation
        - event: ClosePositionByLiquidation(address,int256,int256,int256)
          handler: handleClosePositionByLiquidation
      file: ./src/perpetual.ts
  - kind: ethereum/contract
    name: ShareToken
    network: mainnet
    source:
      abi: ERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - LiquidityPosition
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: DelegateChanged(indexed address,indexed address,indexed address)
          handler: handleDelegate
      file: ./src/shareToken.ts
  - kind: ethereum/contract
    name: Vote
    network: mainnet
    source:
      abi: vote
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - LiquidityPosition
      abis:
        - name: vote
          file: ./abis/vote.json
      eventHandlers:
        - event: ProposalCreated(uint256,address)
          handler: handleProposalCreated
        - event: ProposalExecuted(uint256)
          handler: handleProposalExecuted
        - event: VoteCast(indexed address,uint256,bool,uint256)
          handler: handleVoteCast
      file: ./src/vote.ts
